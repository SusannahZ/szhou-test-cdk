{
 "Resources": {
  "SzhouVpcB4259142": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.5.0.0/24",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "szhou-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/Resource"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet1SubnetB19A4CE2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.0.0/28",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "szhou-public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "SzhouVpcB4259142"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1/Subnet"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet1RouteTable2F7D7538": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "SzhouVpcB4259142"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1/RouteTable"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet1RouteTableAssociation73E3D513": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet1RouteTable2F7D7538"
    },
    "SubnetId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet1SubnetB19A4CE2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1/RouteTableAssociation"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet1DefaultRoute7711253D": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "SzhouVpcIGW7CE674B4"
    },
    "RouteTableId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet1RouteTable2F7D7538"
    }
   },
   "DependsOn": [
    "SzhouVpcVPCGWE13D8B4E"
   ],
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet1/DefaultRoute"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet2SubnetAABB0A7F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.5.0.16/28",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "szhou-public-subnet"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "SzhouVpcB4259142"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2/Subnet"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet2RouteTable58A5546B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "SzhouVpcB4259142"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2/RouteTable"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet2RouteTableAssociation36286DF6": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet2RouteTable58A5546B"
    },
    "SubnetId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet2SubnetAABB0A7F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2/RouteTableAssociation"
   }
  },
  "SzhouVpcszhoupublicsubnetSubnet2DefaultRoute80EDC07E": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "SzhouVpcIGW7CE674B4"
    },
    "RouteTableId": {
     "Ref": "SzhouVpcszhoupublicsubnetSubnet2RouteTable58A5546B"
    }
   },
   "DependsOn": [
    "SzhouVpcVPCGWE13D8B4E"
   ],
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/szhou-public-subnetSubnet2/DefaultRoute"
   }
  },
  "SzhouVpcIGW7CE674B4": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "szhou-vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/IGW"
   }
  },
  "SzhouVpcVPCGWE13D8B4E": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "SzhouVpcIGW7CE674B4"
    },
    "VpcId": {
     "Ref": "SzhouVpcB4259142"
    }
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/VPCGW"
   }
  },
  "SzhouVpcRestrictDefaultSecurityGroupCustomResource3FAE4FE9": {
   "Type": "Custom::VpcRestrictDefaultSG",
   "Properties": {
    "ServiceToken": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E",
      "Arn"
     ]
    },
    "DefaultSecurityGroupId": {
     "Fn::GetAtt": [
      "SzhouVpcB4259142",
      "DefaultSecurityGroup"
     ]
    },
    "Account": {
     "Ref": "AWS::AccountId"
    }
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/SzhouVpc/RestrictDefaultSecurityGroupCustomResource/Default"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Version": "2012-10-17",
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ]
    },
    "ManagedPolicyArns": [
     {
      "Fn::Sub": "arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
     }
    ],
    "Policies": [
     {
      "PolicyName": "Inline",
      "PolicyDocument": {
       "Version": "2012-10-17",
       "Statement": [
        {
         "Effect": "Allow",
         "Action": [
          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress"
         ],
         "Resource": [
          {
           "Fn::Join": [
            "",
            [
             "arn:",
             {
              "Ref": "AWS::Partition"
             },
             ":ec2:",
             {
              "Ref": "AWS::Region"
             },
             ":",
             {
              "Ref": "AWS::AccountId"
             },
             ":security-group/",
             {
              "Fn::GetAtt": [
               "SzhouVpcB4259142",
               "DefaultSecurityGroup"
              ]
             }
            ]
           ]
          }
         ]
        }
       ]
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Role"
   }
  },
  "CustomVpcRestrictDefaultSGCustomResourceProviderHandlerDC833E5E": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": {
      "Fn::Sub": "cdk-hnb659fds-assets-${AWS::AccountId}-${AWS::Region}"
     },
     "S3Key": "ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a.zip"
    },
    "Timeout": 900,
    "MemorySize": 128,
    "Handler": "__entrypoint__.handler",
    "Role": {
     "Fn::GetAtt": [
      "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0",
      "Arn"
     ]
    },
    "Runtime": {
     "Fn::FindInMap": [
      "LatestNodeRuntimeMap",
      {
       "Ref": "AWS::Region"
      },
      "value"
     ]
    },
    "Description": "Lambda function for removing all inbound/outbound rules from the VPC default security group"
   },
   "DependsOn": [
    "CustomVpcRestrictDefaultSGCustomResourceProviderRole26592FE0"
   ],
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/Custom::VpcRestrictDefaultSGCustomResourceProvider/Handler",
    "aws:asset:path": "asset.ee7de53d64cc9d6248fa6aa550f92358f6c907b5efd6f3298aeab1b5e7ea358a",
    "aws:asset:property": "Code"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/12OQWuDQBCFf0vu61aF9G49lB4CoiHXMq5jOonOys5spIT892Aaaulpvvfx4E1us21m0w3MkrjunAzU2muj4M4GZvlEl9vrYXKm7PlQlaaK7UCuiS2jLm6l2kfFPbQDrn51hYh3BEqef8sLfLBiYNR3UJzh+znzTIUquK8RWW+mRvExODRlFPXjGnv+yzuYJuLjv1YV/IU6DG8gaAoR1Ebh+Oj1XHruaHnsZth3aE/ycslTm73adHMSoiREVhrR1j/3DnUPzaMyAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "SzhouVpcEc2Day5Stack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "LatestNodeRuntimeMap": {
   "af-south-1": {
    "value": "nodejs20.x"
   },
   "ap-east-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-1": {
    "value": "nodejs20.x"
   },
   "ap-northeast-2": {
    "value": "nodejs20.x"
   },
   "ap-northeast-3": {
    "value": "nodejs20.x"
   },
   "ap-south-1": {
    "value": "nodejs20.x"
   },
   "ap-south-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-1": {
    "value": "nodejs20.x"
   },
   "ap-southeast-2": {
    "value": "nodejs20.x"
   },
   "ap-southeast-3": {
    "value": "nodejs20.x"
   },
   "ap-southeast-4": {
    "value": "nodejs20.x"
   },
   "ap-southeast-5": {
    "value": "nodejs20.x"
   },
   "ap-southeast-7": {
    "value": "nodejs20.x"
   },
   "ca-central-1": {
    "value": "nodejs20.x"
   },
   "ca-west-1": {
    "value": "nodejs20.x"
   },
   "cn-north-1": {
    "value": "nodejs18.x"
   },
   "cn-northwest-1": {
    "value": "nodejs18.x"
   },
   "eu-central-1": {
    "value": "nodejs20.x"
   },
   "eu-central-2": {
    "value": "nodejs20.x"
   },
   "eu-north-1": {
    "value": "nodejs20.x"
   },
   "eu-south-1": {
    "value": "nodejs20.x"
   },
   "eu-south-2": {
    "value": "nodejs20.x"
   },
   "eu-west-1": {
    "value": "nodejs20.x"
   },
   "eu-west-2": {
    "value": "nodejs20.x"
   },
   "eu-west-3": {
    "value": "nodejs20.x"
   },
   "il-central-1": {
    "value": "nodejs20.x"
   },
   "me-central-1": {
    "value": "nodejs20.x"
   },
   "me-south-1": {
    "value": "nodejs20.x"
   },
   "mx-central-1": {
    "value": "nodejs20.x"
   },
   "sa-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-1": {
    "value": "nodejs20.x"
   },
   "us-east-2": {
    "value": "nodejs20.x"
   },
   "us-west-1": {
    "value": "nodejs20.x"
   },
   "us-west-2": {
    "value": "nodejs20.x"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}